stages:
  - build

#build frontend:
#  stage: build
#  tags:
#    - Builder
#  script:
#    - echo 'Start Build Frontend'
#    - cd sa-frontend/
#    - npm install
#    - npm run build
#    - echo $CI_REGISTRY_PASSWORD | docker login -u $DOCKER_USER_ID --password-stdin
#    - docker build -f Dockerfile -t $DOCKER_USER_ID/sentiment-analysis-frontend .
#    - docker push $DOCKER_USER_ID/sentiment-analysis-frontend
#  artifacts:
#    paths:
#      - sa-frontend/build/

build logic-python:
  stage: build
  tags:
    - Builder
  script:
    - echo 'Build backend'
    - cd sa-logic/sa
    - pip3 install -r requirements.txt
    - python3 -m textblob.download_corpora
    - echo $CI_REGISTRY_PASSWORD | docker login -u $DOCKER_USER_ID --password-stdin
    - docker build -f Dockerfile -t $DOCKER_USER_ID/sentiment-analysis-logic .
    - docker push $DOCKER_USER_ID/sentiment-analysis-logic

#build maven-webapp:
#  stage: build
#  tags:
#    - Builder
#  script:
#    - echo 'Build maven app'
#    - cd sa-webapp/
#    - mvn install
#    - echo $CI_REGISTRY_PASSWORD | docker login -u $DOCKER_USER_ID --password-stdin
#    - docker build -f Dockerfile -t $DOCKER_USER_ID/sentiment-analysis-web-app .
#    - docker push $DOCKER_USER_ID/sentiment-analysis-web-app
#  artifacts:
#    paths:
#      - sa-webapp/target